sqrt(900)-sqrt(600)
sqrt(300)-sqrt(0)
(sqrt(900)-sqrt(600))/sqrt(999)
(sqrt(400)-sqrt(100))/sqrt(999)
((900)^2-(600)^2)/(999^2)
((400)^2-(100)^2)/(999^2)
900^2-600^2
sqrt(900^2-600^2)
sqrt(300)
a = c(1, 2, 19, 3, 4, 17)
sort(a)
b = sort(a)
b[lenght(b)]
b[length(b)]
100/900
(856^2-275^2)^0.5
(740^2-329^2)^0.5
(810-662)/999
(810^0.5-662^0.5)/999^0.5
2^0.5
2^0.33
2^0.25
2^0.05
2^0.01
2^0.001
2^0
5^0.01
sqrt(300)
sqrt(600)-sqrt(300)
0^0.01
0^0
log(0.01)
log(0.001)
log(1)
log(0.9)
log(0)
library("ChemmineR")
sdf <- smiles2sdf("CC(=O)OC1=CC=CC=C1C(=O)O")
view(sdf)
# AttemptAtStructure1
# Arun Moorthy
# 08/22/2018
# ==============================================================================
rm(list=ls())
library(ChemmineR)
sdf <- smiles2sdf("CC(=O)OC1=CC=CC=C1C(=O)O")
ls
install.packages("keras",type="source")
install.packages("keras",type="source",dependencies=TRUE)
install.packages("keras",type="source",dependencies=TRUE)
install.packages("keras",dependencies=TRUE)
library(keras)
install_keras()
library(keras)
library(keras)
mnist <- dataset_mnist()
View(mnist)
x_train <- mnist$train$x
y_train <- mnist$train$y
x_test <- mnist$test$x
y_test <- mnist$test$y
x_train <- array_reshape(x_train, c(nrow(x_train),784))
x_test <- array_reshape(x_test,c(nrow(x_test),784))
x_train <- x_train/255
x_test <- x_test/255
library(Rcpp)
seq_along(10)
seq_along(1:10)
seq(1:10)
sumR <- function(x) {
total <- 0
for (i in seq_along(x)) {
total <- total + x[i]
}
total
}
cppFunction('
double sumC(NumericVector x) {
int n = x.size();
double total = 0;
for(int i = 0; i < n; ++i) {
total += x[i];
}
return total;
}
')
install.packages("RTools",dependecies=TRUE)
install.packages("Rtools",dependecies=TRUE)
install.packages("Rcpp",dependencies=TRUE)
install.packages("Rcpp", dependencies = TRUE)
library(Rcpp)
sumR <- function(x) {
total <- 0
for (i in seq_along(x)) {
total <- total + x[i]
}
total
}
cppFunction('
double sumC(NumericVector x) {
int n = x.size();
double total = 0;
for(int i = 0; i < n; ++i) {
total += x[i];
}
return total;
}
')
stime({
a=sumR(1000)
})[3]
Rtime = time({
a=sumR(1000)
})[3]
library(Rcpp)
sumR <- function(x) {
total <- 0
for (i in seq_along(x)) {
total <- total + x[i]
}
return(total)
}
cppFunction('
double sumC(NumericVector x) {
int n = x.size();
double total = 0;
for(int i = 0; i < n; ++i) {
total += x[i];
}
return total;
}
')
Rtime = time({
a=sumR(1000)
})[3]
x=1000
total <- 0
for (i in seq_along(x)) {
total <- total + x[i]
}
Rtime = time({
a=sumR(100000)
})[3]
Rtime = system.time({
a=sumR(100000)
})[3]
a=sumR(100000000000000)
Rtime = system.time({
a=sumR(100000000000000)
})[3]
total <- 0
for (i in seq_along(x)) {
total <- total + x[i]
}
return(total)
total <- 0
for (i in seq_along(x)) {
total <- total + x[i]
}
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
Ctime = system.time({
b=sumC(seq(1:10000))
})[3]
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
sqrt(999)-sqrt(949)
sqrt(99)-sqrt(49)
sqrt(999)
0.8/31
50/999
2.95/999
sqrt(999)+sqrt(949)
sqrt(99)+sqrt(49)
0.9/62.4128
2.95/19.95
50/999
50/100
16 %% 8
17%%8
shiny::runApp('C:/Users/arun/Desktop/NIST-MMP/wrk')
runApp('C:/Users/arun/Desktop/NIST-MMP/wrk')
shiny::runApp('C:/Users/arun/Desktop/NIST-MMP/wrk')
runApp('C:/Users/arun/Desktop/NIST-MMP/wrk')
getwd()
getwd()
setwd("../Desktop/NIST-MMP/wrk/MSPepSearch/2017_05_15_MSPepSearch/x64/"
)
dyn.load("nistdl64a.dll",local=TRUE, now=TRUE)
getwd()
dyn.unload("nistdl64a.dll")
q()
